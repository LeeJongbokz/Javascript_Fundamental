
https://developer.mozilla.org/ko/docs/Learn/JavaScript/Building_blocks/Return_values

- 마지막으로 함수에 관해 다뤄야 하는 필수적인 컨셉이 하나 있음
-> return 값임

- 몇몇 함수는 중요한 값을 반환하지 않지만, 다른 함수는 반환함
-> 그 값들이 무엇인지 이해하는 것, 그것들을 당신의 코드에서 어떻게 사용할지,
   그리고 함수가 어떻게 유용한 값을 반환하게 할지를 이해하는 것은 중요함(7/1) 
-> 우리는 이 모든 것들을 아래에서 다루겠음(7/1) 


### 리턴 값이란 무엇인가?

- 리턴 값은 말 그대로임
-> 함수가 완료되었을 때 반환하는 값을 의미함(7/1)
-> 당신은 이미 리턴 값을 여러 차례 만났을 것임
    비록 당신이 그것에 대해서 명료하게 생각해보지 않았다 하더라도
    
 - 익숙한 예시를 다시 살펴봄
 -> 이 시리즈의 이전 article임
 
 let myText = 'The weather is cold';
 let newString = myText.replace('cold', 'warm');
 console.log(newString);
 
 - replace() 함수는 myText string에 의해 호출되고, 두 개의 인자가 전달됨
 
  1. 'cold'를 찾기 위한 substring
  2. 그것을 'warm'으로 대체하기 위한 string
  
 - 함수가 완료되면, 그것은 값을 반환함
 -> 그 값은 대체가 완료된 새로운 string임
 -> 위의 코드에서 return 값이 결과는 newString 변수에 저장됨(7/1)
 
 - 당신이 MDN 레퍼런스 페이지에서 replace() 함수를 본다면, 당신은 return value라는 섹션을 보게 될 것임
 -> 함수에 의해서 어떤 값이 리턴되는지 알고 이해하는 것은 매우 유용함
 -> 따라서 우리는 이 정보를 가능한한 어디든지 포함시키고자 함(7/1)
 
 - 어떤 함수는 어떤 값도 리턴하지 않음
   (이 경우 우리의 reference pages는 return 값을 void 혹은 undefined 라고 함)
 -> 예를 들어, 우리가 이전 article에서 만든 displayMessage() 함수에서 
    함수가 실행되었을 때, 어떤 특정한 값도 리턴되지 않음(7/1)
 -> 이것은 단지 box가 screen의 어딘가에서 보이게 함(7/1)
 
 - 일반적으로 리턴 값은 함수가 어떤 연산의 중간 단계에 있을 때 사용됨
 -> 당신이 그 함수로 계산되어야 하는 어떤 값을 포함한, 최종 결과를 얻고 싶다면
 -> 그 함수가 값을 계산하고난 후, 그것은 
    
