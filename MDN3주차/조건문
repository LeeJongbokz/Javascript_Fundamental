
https://developer.mozilla.org/ko/docs/Learn/JavaScript/Building_blocks/%EC%A1%B0%EA%B1%B4%EB%AC%B8

- 어떤 프로그래밍 언어든 코드는 의사결정을 내리고 입력 내용에 따라 작업을 수행해야 함
-> 예를 들어 게임에서 플레이어의 생명 수치가 0이면 게임이 종료됨
-> 날씨 앱에서는 아침에 해가 뜬 그림을 보여주고, 밤에는 달과 별을 보여줌
-> 이 문서에서는 Javascript에서 조건문이 작동하는 방법을 살펴봄 (6/15)


### 당신은 하나의 조건을 가질 수 있음

- 사람은 작은 것(과자를 하나 먹을까? 두 개 먹을까?)부터 큰 것
  (고향에서 머물면서 아버지의 농장에서 일해야 할까? 아니면 천체 물리학을 공부하러 미국으로 유학을 갈까?)
  까지 자신의 경험을 바탕으로 결정함
-> 조건문은 결정해야 하는 선택(예를 들면, 과자 하나? 두 개?)부터 선택의 결과
   (과자를 하나 먹으면 여전히 배고플 수 있고, 두 개를 먹으면 배는 부르지만, 엄마한테 과자를 다 먹었다고 혼날 수 있음)까지 
   자바스크립트에서 의사 결정을 내릴 수 있음
   
   
## if ... else 문

- 자바스크립트에서 사용하는 조건문 중에서 가장 일반적인 유형을 봄


### if ... else 문법

- if ... else 문법은 pseudocode 다음과 같음

if(condition){
   code to run if condition is true
}else{
   run some other code instead
}

- 키워드 if 뒤에 괄호가 옴
-> 시험할 조건은 괄호 안에 위치함
   이 조건은 마지막 모듈에서 논의했던 비교 연산자를 사용할 것이고
   true나 false를 리턴함
-> 내부의 중괄호 안에 코드가 있음
   이것은 우리가 좋아하는 코드일 수 있고, 조건이 true를 반환하는 경우에만 실행됨
-> 키워드 else
-> 또 다른 중괄호 안에 더 많은 코드가 있음
-> 이것은 우리가 좋아하는 코드 일 수 있고, 조건이 true가 아닌 경우에만 실행됨

- 이 코드는 사람이 읽을 수 있음
-> 만약 조건이 true면, 코드 A를 실행하고, 아니면 코드 B를 실행함

- 반드시 else와 두 번째 중괄호를 포함하지 않아도 된다는 것을 주목해야 함
-> 다음은 또한 완벽한 코드임

 if(condition){
    code to run if condition is true
 }
 
 run some other code
 
- 하지만, 여기서 조심해야 할 점
-> 위의 경우, 코드의 두 번째 블록은 조건문에 의해서 제어되지 않음
-> 그래서 조건이 true나 false를 리턴하는 것에 관계없이 항상 동작함
-> 이것이 반드시 나쁜 것은 아니지만, 원하는 대로 되지 않을 수도 있음
-> 코드의 한 블록이나 다른 블록이 실행되거나 둘 다 실행되지 않는 것을 원함

- 마지막으로, 다음과 같이 짧은 스타일로 중괄호 없이 쓰여진 if...else를 볼 수 있었음
if (condition) code to run if condition is true
else run some other code instead

- 이것은 완벽하게 유효한 코드이지만, 사용하는 것을 추천하지 않음
-> 중괄호를 사용하여 코드를 구분하고, 여러 줄과 들여쓰기를 사용한다면,
   코드를 쉽게 읽고, 진행되는 작업을 훨씬 쉽게 처리할 수 있음(6/15)
   
### 실제 예시

- 문법을 잘 이해하기 위해서 실제 예시를 알아봄
-> 어머니나 아버지가 아이에게 집안일을 도와달라고 요청한다고 상상해봄
-> 부모님께서 "우리 애기, 만약에 쇼핑 하고 가는 걸 도와주면 용돈을 더 줄게! 
              그럼 네가 원하는 걸 살 수 있을거야"라고 말씀 하신다면,
   자바스크립트에서 이것을 다음과 같이 표현할 수 있음
   
var shoppingDone = false;

if(shoppingDone === true){
   var childAllowance = 10;
}else{
   var childsAllowance = 5;
}

- 위 코드에는 항상 false를 리턴하는 shoppingDone 변수를 결과로 얻음
-> 아이에게 실망을 안겨줌
-> 아이가 부모님과 함께 쇼핑을 간다면 우리가 부모님을 위해 shoppingDone변수를
   true로 설정하는 메커니즘을 만들 수 있음
   
   
### else if

- 지난 예시에서는 두 가지 선택과 결과가 있었음
-> 하지만 우리가 두 가지보다 더 많은 선택과 결과를 원한다면?
-> 추가로 선택/결과를 if...else에 연결하는 방법이 있음

- else if를 사용하여 각 추가 선택은 if(){...}와 else{...}사이에 추가적인 블록이 필요함

<label for="weather"> Select the weather type today: </label>
<select id="weather">
   <option value= ""> --Make a choice --</option>
   


   
   
