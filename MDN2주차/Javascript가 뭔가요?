
https://developer.mozilla.org/ko/docs/Learn/JavaScript/First_steps/What_is_JavaScript

- MDN의 자바스크립트 초급자 과정에 오신걸 환영함
-> 이 글은 Javascript를 넓게 보면서 "뭔가요?", "뭘 하나요?"와 같은 질문을 답변하고,
   여러분이 Javascript에 친숙하도록 도와드림
   

- 자바스크립트는 복잡한 무언가를 웹페이지에 적용할 수 있게 하는 스크립트 혹은 프로그래밍 언어임
-> 자바스크립트는 표준 웹 기술이라는 레이어 케이크에서 세번째 층이라고 볼 수 있음
-> 다른 두 층(HTML과 CSS)에 대한 자세한 정보는 학습 영역의 다른 부분에서 찾아볼 수 있음

+ 자바스크립트가 복잡한 무언가를 웹페이지에 적용할 수 있게 한다는 것이 무엇인가?
-> 자바스크립트는 웹페이지에 동작을 부여할 수 있다는 의미이다.
+ 자바스크립트가 스크립트 언어라는 것이 무엇인가? 스크립트 언어란 무엇인가?
https://www.computerhope.com/jargon/s/script.htm
https://en.wikipedia.org/wiki/Scripting_language
-> 스크립트 언어는 프로그래밍 언어의 한 종류로,
   컴파일되지 않은 채 실행될 수 있는 파일에 있는 일련의 명령어를 의미한다. 
   스크립트 언어는 보통 컴파일되기보다는 인터프리트 된다.(6/1)  
   
+ 인터프리터란 무엇인가?
-> 인터프리터란 프로그래밍 혹은 스크립트 언어로 쓰여진 instruction을 
   machine language program으로 compile하지 않고 
   바로 실행할 수 있는 프로그램을 의미한다. (6/1) 
   
+ 컴파일러란 무엇인가? 컴파일이란 무엇인가?
-> 컴파일러란 하나의 프로그래밍 언어로 작성된 코드를 다른 프로그래밍 언어로 변환하는 컴퓨터 프로그램을 의미함
   컴파일이란 컴파일러가 하는 행위를 의미함
   컴파일러는 보통 high-level programming language로 작성된 소스 코드를 
   lower-level programming language(ex) assembly language or machine code)로 변환해서
   실행 가능한 프로그램을 만드는데 사용됨 (6/1) 

- HTML은 제공할 웹 컨텐츠의 구조와 의미를 문단, 제목, 표, 삽입 이미지, 동영상 등으로 
  정의하고 부여하는 마크업 언어임
  
+ 왜 HTML은 웹 컨텐츠의 구조와 의미를 정의하고 부여하는가?
-> 우선적으로 웹 컨텐츠에 대해 체계적으로 나열하는 것이 필요했고,
   이에 따라 HTML이 개발된 것이다. 
   HTML은 웹 컨텐츠를 체계적이고 구조적으로 나열할 수 있도록 도와주는 언어이다. (6/1) 

+ 마크업 언어란 무엇인가?
   https://ko.wikipedia.org/wiki/%EB%A7%88%ED%81%AC%EC%97%85_%EC%96%B8%EC%96%B4
-> 마크업 언어란 태그 등을 이용하여 문서나 데이터의 구조 등을 명기하는 언어의 한 가지임(6/1) 

  
- CSS는 배경색, 폰트 등의 레이아웃을 지정하고, HTML 컨텐츠를 꾸며주는 스타일 규칙 언어임
+ 왜 CSS로 배경색, 폰트 등의 레이아웃을 지정하는가?
-> CSS로 배경색, 폰트 등의 레이아웃을 지정하는 이유는 그로 인해서 HTML 컨텐츠에 시각적 가치를 부여할 수 있기 때문이다.
   HTML 컨텐츠에 시각적 가치를 부여함으로 인해서, 사용자가 HTML 컨텐츠를 이용하는데 있어서 편의성, 효용 등을 느낄 수 있게 하는 것이
   목적이다.(6/1) 



- Javascript는 동적으로 컨텐츠를 바꾸고, 멀티미디어를 다루고, 움직이는 이미지 그리고 꽤나 많은 다른 일
  들을 할 수 있는 스크립트 언어임
+ 왜 Javascript는 동적으로 컨텐츠를 바꾸고, 멀티미디어를 다루고, 움직이는 이미지 등을 다루는가?
-> 사용자가 웹 페이지를 이용하는데 있어서, 웹페이지의 동작과 관련된 니즈가 있었고, 이러한 니즈를 충족시키기 위해서
   Javascript가 개발된 것이다. 
   Javascript가 동적으로 컨텐츠를 바꾸고, 멀티미디어를 다루고, 움직이는 이미지 등을 다루는 이유는
   동작과 관련된 사용자의 니즈를 만족시키기 위함이다.(6/1)
  

- 3개의 요소들은 각각 유기적으로 잘 구성되어 있음
-> 예제와 같이 간단한 폼을 만들어 봄
-> HTML을 사용하여 그 구조와 목적에 맞게 마크업을 할 수 있음
-> 그리고 CSS를 추가하여 이쁘게 꾸밀 수도 있음
-> 그리고 마지막으로 약간의 Javascript로 동적인 기능을 추가할 수 있음

+ 왜 3개의 요소들은 각각 유기적으로 잘 구성되어 있는가?
-> 3개의 요소들이 각각이 유기적으로 잘 구성될 수 있는 방향으로 발전되어 왔다.
   왜냐하면 3개의 요소들이 각각이 유기적으로 잘 구성되어야만,
   사용자에게 완성도 있는 경험을 제공할 수 있기 때문이다.(6/1)    


---------------------------------------------------------------------------------------------------------------------------------------

  그래서 진짜 어떤 일을 할 수 있나요?

- 자바스크립트 언어의 핵심은 다음과 같은 일들을 할 수 있게 하는 프로그래밍 기능들로 구성되어 있음

  1) 변수 안에 값을 저장할 수 있음 
  -> 위의 예시를 보면 작성된 새로운 이름을 name이라는 변수에 저장함
  
  + 왜 자바스크립트 변수 안에 값을 저장할 수 있는가?
  -> 자바스크립트 변수 안에 값을 저장함으로 인해서 해당 값을 다양한 방식으로 활용하기 위함이다.(6/1)  
  
  
  2) 프로그래밍에서 문자열(string)이라고 불리는 문자들도 조작 가능함
  -> 위 예시에 보면 "Player 1:"이라는 문자열을 name이라고 만든 변수와 결합하여
     "Player 1: Chris" 라는 글을 완성할 수 있음
  
  + 왜 문자열(string)이라고 불리는 문자들도 조작 가능한가?
  -> 문자열(string)이라고 불리는 문자들을 조작해서 다양한 방식으로 활용할 수 있기 때문이다
     또한 문자열을 다른 변수와 결합해서도 활용할 수 있다.(6/1) 
  
  3) 웹 페이지 상의 이벤트에 응답하는 코드를 작성할 수 있음
  -> 예제에서 사용한 click 이벤트를 통해 요소가 언제 클릭되고, 
     텍스트 라벨을 업데이트 시킬지 정의함
  
  + 왜 웹 페이지 상의 이벤트에 응답하는 코드를 작성하는가?
  -> 사용자가 웹 페이지 상에서 특정 버튼을 누르거나와 같은 요청을 했을 때,   
     그 요청에 응답할 수 있는 코드를 미리 작성해 놓는 것이다. (6/1) 
  + 왜 그 요청에 응답할 수 있는 코드를 미리 작성해 놓는가?
  -> 그 요청에 응답할 수 있는 코드를 미리 작성해 놓음으로써,
     사용자의 요청에 특정한 기능을 제공하는 것이다.(6/1) 
     
  4) 그리고 더 많은 것들!
  
  
  - 하지만 더욱 흥미진진한 것은 코어 자바스크립트 언어 기반의 가능성임
  -> 소위 Applications Programming Interfaces(API)라는 것은 여러분의 자바스크립트 코드에 사용할 수 있는
     추가적인 강력한 마법들을 제공함
     
  + 왜 더욱 흥미진진한 것은 코어 자바스크립트 언어 기반의 가능성인가?
  -> 코어 자바스크립트 언어를 활용해서 API와 같은 기능을 제공할 수 있기 때문이다. 
  + 왜 API란 기능이 유용한가? API란 무엇인가?
  https://en.wikipedia.org/wiki/Application_programming_interface
  -> API란 여러 소프트웨어 중개자 간의 상호작용을 정의하는 컴퓨팅 인터페이스를 의미함
     API는 만들어질 수 있는 call이나 request의 종류, 그것들을 어떻게 만드는지, 
     사용되어야 하는 데이터 포맷, 따라야 하는 컨벤션 등을 정의한다.
  
  + 컴퓨팅 인터페이스란 무엇인가?
  https://en.wikipedia.org/wiki/Interface_(computing)
  -> 컴퓨팅 인터페이스란 두 개 혹은 그 이상의 컴퓨팅 시스템이 정보를 교환하기 위해서 
     공유된 경계를 의미한다.
  + 두 개 혹은 그 이상의 컴퓨팅 시스템이 정보를 교환한다는 것이 무엇인가?
  -> 말 그대로 한 컴퓨팅 시스템에서 다른 컴퓨팅 시스템으로 정보를 전송하거나 정보를 받는 것을 의미한다.(6/1)
  
  + 컴퓨팅 시스템이란 무엇인가?
  https://en.wikipedia.org/wiki/Computer
  -> 컴퓨터란 컴퓨터 프로그래밍을 통해 일련의 수리적이고 논리적인 작업을 수행할 수 있는 기계를 의미한다.(6/1) 
     컴퓨팅 시스템이란 하드웨어, OS(메인 소프트웨어), 주변 기기를 포함한 '완전한' 컴퓨터를 의미한다. (6/1) 
  
  + API가 만들어질 수 있는 call이나 request의 종류를 정의한다는 것이 무엇인가?
  -> 말 그대로 두 개 이상의 컴퓨팅 시스템에서 어떤 call이나 request를 통해서 정보를 전송하고 받을 수 있는지
     정의하는 것을 의미한다. 
  + 그것들을 어떻게 만드는지 란 무엇인가?
  -> call이나 request를 실제로 어떻게 정의할지를 의미하는 것이다.(6/1) 
  + 사용되어야 하는 데이터 포맷이란 무엇인가?
  -> 두 개 이상의 컴퓨팅 시스템이 데이터를 주고 받기 위해서는 
     일정한 데이터 포맷이 필요하다. 
     이 때의 데이터 포맷을 사용되어야 하는 데이터 포맷이라고 한다. 
     대표적인 데이터 포맷에는 XML, JSON 등이 있다.(6/1) 
         
  - API는 이미 만들어진 코드의 집합체라고 볼 수 있으며, 개발자들이 만들기 어렵고 힘든 부분을 
    쉽게 구현하도록 하는 프로그램임
  -> 마치 집에서 가구를 만들 때, 직접 디자인하고, 재료를 구하고, 재단하고, 못을 박고 하는 등 
     혼자서 모든 것을 하는 대신 가구 만들기 키트를 사는 것과 같다고 보면 됨
     
  + 왜 API란 이미 만들어진 코드의 집합체라고 볼 수 있는가?
  -> API는 이미 만들어진 코드의 집합체로 볼 수도 있고, API 자체를 새로 개발 할 수도 있다.(6/1)
  + API 자체를 새로 개발한다는 것이 무엇인가?
  -> 새로운 데이터 교환 양식을 정의하는 것을 의미한다.(6/1) 
  + 왜 새로운 데이터 교환 양식을 정의하는가?
  -> 특정 기능을 수행하게 하기 위함이다. (6/1) 
     
  - 일반적으로 두 종류로 구분됨
  
  (1) Browser API는 웹 브라우저에 설치한 API들로, 컴퓨터 환경 구성으로부터 데이터를 보이게 하고
      복잡한 일들을 하게 함. 예를 들어,
      
      + Browser API가 웹 브라우저에 설치한 API라는 의미는 무엇인가?
      -> Browser API는 웹 브라우저에 설치되어서, 웹 브라우저 내에서 데이터 교환에 관한
         기능을 수행하는 API를 의미한다.(6/1)
      
      - DOM API는 동적으로 페이지의 스타일을 정하는 등 HTML과 CSS를 알맞게 조정하는 역할을 함
        우리가 매일 보는 팝업창이나 위의 사진과 같이 컨텐츠로 보여지는 것들이 모두 DOM의 결과임
        
      + 왜 DOM API가 필요한가? DOM API란 무엇인가?
      https://developer.mozilla.org/ko/docs/Web/API/Document_Object_Model/%EC%86%8C%EA%B0%9C
      -> DOM이란 Document Object Model의 줄임말로, HTML, XML 문서의 프로그래밍 인터페이스임  
         DOM은 문서의 구조화된 표현을 제공하며, 프로그래밍 언어가 DOM 구조에 접근할 수 있는 방법을 제공하여
         그들이 문서 구조, 스타일, 내용 등을 변경할 수 있게 도움(6/1) 
        
      
      - Geolocation API는 지리적인 정보를 검색하게 해줌
        이는 Google Maps가 어떻게 위치를 찾고 지도에 표시하는지 알 수 있게 함
       
      - Canvas와 WebGL API는 2D와 3D 그래픽을 만들 수 있도록 함
        이러한 웹 기술을 사용하여 다양하고 재밌는 것들을 지원함
        
      - HTMLMediaElement와 WebRTC같은 Audio and Video API는 음악과 비디오를 
        웹 페이지 상에서 재생하고, 웹캠으로 캡쳐하고 다른 컴퓨터에 표시하는 등의
        멀티미디어를 활용할 수 있는 재미있는 기술을 지원함
        
  (2) Third Party API는 브라우저에 기본적으로 설치된 API가 아닌 
      인터넷에서 개인적으로 정보와 코드를 얻어 프로그래밍 한 것을 말함
      예를 들어,
      
      + Third Party API란 무엇인가?
      -> Third Party에 의해서 미리 작성된 API를 의미하며,
         이 API를 가져다 쓰면, 해당 Third Party에서 제공하는 기능들을 적용할 수 있게 된다. (6/1) 
      
      - Twitter API는 웹 사이트에 가장 최근의 트윗을 보여줌
      - Google Maps API와 OpenStreetMap API는 웹사이트에 원하는 기능을 넣고,
        추가 기능을 지원함
      -> 이러한 API들은 고급 과정이며, 이 과정에서는 다루지 않음
      -> 이 API들에 대한 보다 자세한 정보는 Client-side web APIs module에서 살펴봄
      
      - 물론 이것 말고도 엄청나게 다양한 API들이 존재함
      -> 하지만 이 수업을 듣고 Facebook, Google Maps, Instagram 등을 만들수는 없으니
         흥분하지는 말길 바람
      -> 이것보다 우리는 먼저 기본적인 것들에 대해 배울 것이고, 이것이 이 수업을 진행하는 목적임
       
      
      
     
      
  
  
  
  
  
  


















