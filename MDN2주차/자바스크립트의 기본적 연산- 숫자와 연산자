


### 할당 연산자

- 할당 연산자는 변수에 값을 할당하는 연산자임
-> 우리는 이미 제일 기본적인 것인 =를 사용함
-> 이것은 단순히 왼쪽의 변수에 오른쪽의 값을 할당함(6/12)

var x = 3;
var y = 4;
x = y;

- 하지만 더 복잡한 타입도 있음
-> 이것들은 당신의 코드를 더 간단하고 효율적으로 만들어줄
   유용한 지름길을 제공함
-> 가장 자주 사용하는 것은 아래와 같음


(1) +=
- 왼쪽에 있는 변수에 오른쪽에 있는 값을 더함
-> 그리고 새로운 변수 값을 리턴함

(2) -=
- 왼쪽에 있는 변수에 오른쪽에 있는 값을 빼줌
-> 그리고 새로운 변수 값을 리턴함

(3) *=
- 왼쪽에 있는 변수에 오른쪽에 있는 값을 곱해줌
-> 그리고 새로운 변수값을 리턴함

(4) /=
- 왼쪽에 있는 변수를 오른쪽에 있는 값으로 나눠줌
-> 그리고 새로운 변수값을 리턴함

- 위의 예시를 당신의 콘솔에 타이핑하고 그것들이 어떻게 동작하는지 바라봄
-> 각각의 경우에 당신은 값이 무엇인지 추정할 수 있어야 함

- 당신은 다른 변수를 각각의 표현 오른쪽에 사용할 수 있음
-> 예를 들어, 

var x = 3;
var y = 4;
x *= y;



### 비교 연산자

- 때때로 우리는 true/false 테스트를 하고 싶음
-> 그리고 그 테스트의 결과에 따라서 행동함
-> 이것을 하기 위해서 우리는 비교 연산자를 사용함

(1) ===
- 강한 동치를 의미함
-> 왼쪽 값과 오른쪽 값이 서로 같은지를 테스트함
(2) !==
- 강한 비동치를 의미함
-> 왼쪽 값과 오른쪽 값이 서로 같지 않은지를 테스트함
(3) <
- 작은
-> 왼쪽 값이 오른쪽 값보다 작은지 테스트함
(4) >
- 큰
-> 왼쪽 값이 오른쪽 값보다 큰지 테스트함
(5) <=
- 작거나 같은
-> 왼쪽 값이 오른쪽 값보다 작거나 같은지 테스트함
(6) >=
- 크거나 같은
-> 왼쪽 같이 오른쪽 값보다 크거타 같은지 테스트함

Note
- 당신은 어떤 사람들이 그들의 테스트에 == 와 != 를 동치와 비동치에 사용하는 것을 봤었을 것임
-> 이것들은 자바스크립트에서 유효한 연산자임
-> 하지만 그것들은 ===, !==와 다름
-> 전자의 것은 값이 같은지 테스트하지만, 값의 데이터타입이 같은지 테스트하지 않음
-> 후자의 것은 값과 좀 더 엄격하게 데이터 타입이 둘 다 같은지 테스트 함
-> 엄격한 버전이 에러를 적게 발생시키므로, 우리는 당신에게 그것들을 사용하기를 권장함(6/12) 

- 만약 당신이 콘솔에 이것들에 관한 몇몇 변수들을 넣는다면
  당신은 그것들이 모두 true/false 값을 리턴하는 것을 볼 수 있음
-> 우리가 지난 article에서 언급한 boolean을 말함

- 이것들은 매우 유용함
-> 그들은 우리가 코드에서 의사결정하는 것을 가능하게 하고,
   그들은 우리가 어떤 선택을 하고 싶을 때 쓰임
   
- 예를 들어, booleans는

(1) 기능이 켜져 있는지 꺼져 있는지에 따라 올바른 텍스트 라벨 버튼을 디스플레이하는데
(2) 게임이 끝났을 때는, 게임이 끝났다는 메시지를,
    게임이 승리했을 때는, 게임이 승리했다는 메시지를 보여주는데
(3) 어떤 연휴 시즌이냐에 따라서, 알맞은 계절 인사를 보여주는데
(4) 맵을 선택한 줌 레벨에 따라 줌인하고 줌아웃하는데

쓰일 수 있음

- 우리는 어떻게 그런 로직을 코딩할 수 있는지 볼 것임
-> 우리가 조건적 선언을 볼 때
-> 지금은 우선 빠른 예시를 봄

<button> Start machine </button>
<p>The machine is stopped</p>

var btn = document.querySelector('button');
var txt = document.querySelector('p');

btn.addEventListener('click', updataBtn);

function updataBtn(){
   if(btn.textContent === 'Start machine'){
     btn.textContent = 'Stop machine';
     txt.textContent = 'The machine has started!';
   }else{
     btnt.textContent = 'Start machine';
     txt.textContent = 'The machine has stopped!';
   }
}

- 당신은 equality operator가 updateBtn() 함수 내에서 사용됨을 볼 수 있음
-> 이 경우에, 우리는 두 수학적 표현이 같은 값을 갖고 있는지 테스트하지 않음
-> 우리는 버튼의 text content가 특정한 문자열을 갖고 있는지 테스트함
-> 그러나 이것은 동일한 원리임

- 만약 버튼이 눌렀을 때, 현재 "Start machine"이라고 한다면
-> 우리는 이것의 라벨을 "Stop machine"으로 바꿈
-> 그리고 그에 맞게 라벨을 업데이트함

- 만약 버튼이 현재 눌렀을 때, "Stop machine"이라고 한다면
-> 우리는 디스플레이를 원상복구함 (6/12) 

Note
- 두 개의 상태를 번갈아 가면서 나타내는 컨트롤을 'toggle'이라고 함


### 요약

- 이 아티클에서 우리는 당신이 자바스크립트에서의 숫자에 관해 알아야할 기초적인 정보를 다뤘음
-> 당신은 자바스크립트를 배워나가는 동안에 숫자들이 반복적으로 사용되는 것을 볼 것이므로,
   지금 이것을 이해해두는 것이 좋음
-> 만약 당신이 수학을 즐기는 사람이 아니라면 이 챕터가 꽤 짧았다는 점에서 편안함을 느낄 수 있을 것임(6/12) 
  
  
